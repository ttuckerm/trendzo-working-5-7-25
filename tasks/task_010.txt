# Task ID: 10
# Title: Implement Hook Genie AI Content Coach
# Status: pending
# Dependencies: 6
# Priority: low
# Description: Build the AI Content Coach with script generation, video recording, and performance feedback functionality.
# Details:
Integrate Claude API for script generation based on topic input. Create content style selection system with presets. Implement target audience configuration options. Build video duration selection tools. Create teleprompter functionality for script display. Implement webcam integration for video recording. Build AI analysis system for recorded content. Create feedback system for hook strength, pacing, and other metrics. Implement performance scoring with visual indicators. Design improvement suggestions based on AI analysis. Create alternative script recommendation system. Ensure the interface is encouraging and provides positive reinforcement.

# Test Strategy:
Test Claude API integration for script generation quality. Verify webcam recording functionality works across browsers. Test AI analysis accuracy for different content types. Ensure feedback is constructive and actionable. Test teleprompter functionality for usability during recording.

# Subtasks:
## 1. Implement Claude API integration for script generation [pending]
### Dependencies: None
### Description: Set up the connection to Claude API and create the script generation system based on user input topics
### Details:
Create API service for Claude integration with proper error handling and rate limiting. Implement prompt engineering to generate hook scripts based on user-provided topics. Design the data models for storing generated scripts. Build the initial UI components for topic input and script display. Include configuration for API keys and environment variables.

## 2. Build content style and audience configuration system [pending]
### Dependencies: 10.1
### Description: Create the interface for selecting content styles, presets, target audience, and video duration
### Details:
Design and implement UI components for style selection with preset options (casual, professional, energetic, etc.). Create audience configuration controls with demographic options. Build video duration selector with appropriate time ranges. Update the script generation system to incorporate these parameters in the Claude API prompts. Store user preferences for future sessions.

## 3. Develop teleprompter functionality [pending]
### Dependencies: 10.1
### Description: Create a teleprompter interface to display the generated script during recording
### Details:
Build a teleprompter component with auto-scrolling capabilities. Implement text formatting for better readability. Add controls for scroll speed adjustment. Create visual indicators for timing and pacing. Include options for font size and display preferences. Ensure the teleprompter is positioned appropriately relative to the camera for natural eye contact.

## 4. Implement webcam integration and video recording [pending]
### Dependencies: 10.3
### Description: Set up webcam access and build the video recording functionality
### Details:
Implement browser webcam access with proper permission handling. Create video recording controls (start, stop, pause, retry). Build preview functionality for camera positioning. Implement video storage and playback capabilities. Add countdown timer before recording starts. Include audio level monitoring. Handle device selection for users with multiple cameras/microphones.

## 5. Create AI analysis system for recorded content [pending]
### Dependencies: 10.4
### Description: Develop the system to analyze recorded videos using Claude API
### Details:
Design and implement the video analysis workflow. Create prompts for Claude to evaluate hook strength, pacing, delivery, and engagement. Process video content for AI analysis (may require audio transcription). Implement analysis request handling and response parsing. Create data models for storing analysis results. Build progress indicators for the analysis process.

## 6. Build performance feedback and scoring system [pending]
### Dependencies: 10.5
### Description: Create the interface to display performance metrics and feedback from AI analysis
### Details:
Design and implement visual scoring components with appropriate metrics (hook strength, pacing, delivery clarity, etc.). Create detailed feedback display with specific observations. Implement visual indicators for strengths and areas of improvement. Build comparison tools for tracking improvement over time. Include data visualization for performance metrics. Ensure feedback is presented in an encouraging manner.

## 7. Implement improvement suggestions and alternative scripts [pending]
### Dependencies: 10.6
### Description: Create the system for generating improvement tips and alternative script recommendations
### Details:
Develop Claude prompts for generating specific improvement suggestions based on analysis. Implement alternative script generation based on performance feedback. Create UI components for displaying suggestions and alternative scripts. Build functionality to apply and record with alternative scripts. Include positive reinforcement messaging throughout the interface. Add option to save favorite scripts and performance history.

