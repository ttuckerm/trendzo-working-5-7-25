name: Test Secrets

on:
  workflow_dispatch:  # Allows manual triggering
  push:
    branches: [ test-secrets ]  # Or trigger on a specific branch

jobs:
  test-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Test OpenAI Key (Check if it exists)
        run: |
          if [ -n "${{ secrets.OPENAI_API_KEY }}" ]; then
            echo "✓ OPENAI_API_KEY is set"
            echo "Key starts with: ${OPENAI_API_KEY:0:7}..."
          else
            echo "✗ OPENAI_API_KEY is not set"
            exit 1
          fi
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Test Firebase API Key
        run: |
          if [ -n "${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}" ]; then
            echo "✓ NEXT_PUBLIC_FIREBASE_API_KEY is set"
            echo "Key length: ${#FIREBASE_KEY}"
          else
            echo "✗ NEXT_PUBLIC_FIREBASE_API_KEY is not set"
            exit 1
          fi
        env:
          FIREBASE_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}

      - name: Test All Firebase Secrets
        run: |
          secrets=(
            "NEXT_PUBLIC_FIREBASE_API_KEY"
            "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN"
            "NEXT_PUBLIC_FIREBASE_PROJECT_ID"
            "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET"
            "NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID"
            "NEXT_PUBLIC_FIREBASE_APP_ID"
          )
          
          for secret in "${secrets[@]}"; do
            if [ -n "${!secret}" ]; then
              echo "✓ $secret is set"
            else
              echo "✗ $secret is not set"
            fi
          done
        env:
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}

      - name: Test OpenAI API Connection
        run: |
          # Test actual API connection (optional)
          response=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
            -H "Content-Type: application/json" \
            https://api.openai.com/v1/models)
          
          if [ "$response" -eq 200 ]; then
            echo "✓ OpenAI API key is valid"
          else
            echo "✗ OpenAI API key might be invalid (HTTP $response)"
          fi
